<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style BasedOn="{StaticResource {x:Type ToggleButton}}"
           TargetType="{x:Type RadioButton}"
           x:Key="MenuButtonTheme">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border"
                            CornerRadius="20"
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}">
                        <Grid VerticalAlignment="Stretch"
                              HorizontalAlignment="Center"
                              Height="40"
                              Width="100">
                            <TextBlock Text="{TemplateBinding Property=Content}"
                                       VerticalAlignment="Center"
                                       HorizontalAlignment="Center"
                                       Padding="25,0,25,0" 
                                       FontSize="16"
                                       x:Name="textBlock"/>
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="textBlock" Property="Foreground" Value="White"/>
                            <Setter TargetName="border" Property="Background" Value="#FF4C557D"/>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="textBlock" Property="Foreground" Value="White"/>
                            <Setter TargetName="border" Property="Background" Value="#FF191919"/>
                            <Setter TargetName="border" Property="CornerRadius" Value="20"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="{x:Type Button}" x:Key="CustomButtonStyle">
        <Setter Property="Width" Value="168"/>
        <Setter Property="Height" Value="42"/>
        <Setter Property="FontFamily" Value="Helvetica"/>
        <Setter Property="FontSize" Value="18"/>
        <Setter Property="Foreground" Value="White"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border"
                            Background="{TemplateBinding Background}"
                            CornerRadius="10"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="0">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FF1D6279"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="border" Property="Background" Value="#FF86C7DD"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect Color="Black"
                                  Opacity="0.15"
                                  BlurRadius="20"
                                  ShadowDepth="0"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Стиль для строк таблицы -->
    <Style TargetType="DataGridRow">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="FontFamily" Value="Segoe UI"/>
        <Setter Property="Background" Value="White"/>
        <Setter Property="Height" Value="35"/>
        <!-- Уменьшенная высота строк -->
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="IsSelected" Value="False"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <!-- Вертикальное выравнивание -->
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFEBEBEB"/>
                <!-- Цвет при наведении -->
            </Trigger>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="#FF1D6279"/>
                <!-- Цвет выделенной строки -->
                <Setter Property="Foreground" Value="White"/>
                <!-- Цвет текста выделенной строки -->
            </Trigger>
        </Style.Triggers>
    </Style>


    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CustomButtonStyle}" x:Key="LoadButtonStyle">
        <Setter Property="Background" Value="#FF58A2BB"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CustomButtonStyle}" x:Key="SaveButtonStyle">
        <Setter Property="Background" Value="#FF58A2BB"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CustomButtonStyle}" x:Key="ClashCheckButtonStyle">
        <Setter Property="Background" Value="#FF58A2BB"/>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource CustomButtonStyle}" x:Key="NewCheckButtonStyle">
        <Setter Property="Background" Value="#FF58A2BB"/>
    </Style>

</ResourceDictionary>
